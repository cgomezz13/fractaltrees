{"version":3,"sources":["webpack:///webpack/bootstrap 0d553b2e4df573f0b2a0","webpack:///./lib/entry.js","webpack:///./lib/tree.js","webpack:///./lib/recursive.js","webpack:///./lib/lsystem.js","webpack:///./lib/oo_tree.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,qBAAqB;AACxC;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,CAAC;;;;;;;;ACzGD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,2BAA2B;AAC9C;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA,oBAAoB,sBAAsB;AAC1C;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 0d553b2e4df573f0b2a0","import Draw from \"./tree.js\";\nimport RecursiveDraw from \"./recursive\";\nimport Lsystem from \"./lsystem\";\nimport OOTree from \"./oo_tree\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // let ctx;\n\n  let basic = document.getElementById(\"canvas-1\");\n  var ctx1 = basic.getContext(\"2d\");\n  basic.addEventListener(\"click\", () => {\n    new Draw(ctx1, 150);\n  });\n\n  let recursive = document.getElementById(\"canvas-2\");\n  var ctx2 = recursive.getContext(\"2d\");\n  recursive.addEventListener(\"click\", () => {\n    RecursiveDraw(ctx2, 400 / 2, 400, 80, 0);\n  });\n\n  let lsystem = document.getElementById(\"canvas-3\");\n  var ctx3 = lsystem.getContext(\"2d\");\n  let graph = new Lsystem(ctx3, 400, 400, 80);\n  lsystem.addEventListener(\"click\", () => {\n    graph.generate();\n  });\n\n  let oocanvas = document.getElementById(\"canvas-4\");\n  var ctx4 = oocanvas.getContext(\"2d\");\n  let start = [400 / 2, 400];\n  let end = [400 / 2, 400 - 80];\n  let commands = [];\n  let leaves = [];\n  let eachLeaf = [];\n  let treeStatus = false;\n  let root = new OOTree(ctx4, start, end, 80, Math.PI / 2);\n  var count = 0;\n\n  oocanvas.addEventListener(\"click\", () => {\n    commands[0] = root; // root\n    if (count < 8) {\n      console.log(count);\n      for (var j = commands.length - 1; j >= 0; j--) {\n        if (!commands[j].finished) {\n          commands.push(commands[j].rightBranch());\n          commands.push(commands[j].leftBranch());\n        }\n        commands[j].finished = true;\n      }\n      count++;\n\n      // to get coordinates for outer most branches\n      if (count === 8) {\n        for (var i = 0; i < commands.length; i++) {\n          if (!commands[i].finished) {\n            leaves.push(commands[i].end);\n          }\n        }\n\n        for (var i = 0; i < leaves.length; i++) {\n          var leaf = {\n            x: leaves[i][0],\n            y: leaves[i][1],\n            vx: 1,\n            vy: 9,\n            radius: 2,\n            color: \"red\",\n            draw: function() {\n              ctx4.beginPath();\n              ctx4.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n              ctx4.closePath();\n              ctx4.fillStyle = this.color;\n              ctx4.fill();\n            }\n          };\n          leaf.draw();\n          // eachLeaf.push(leaf);\n        }\n      }\n    }\n\n    for (var i = 0; i < commands.length; i++) {\n      commands[i].draw();\n    }\n  });\n\n  // function fallingLeaves(allLeaves) {\n  //   // debugger;\n  //   allLeaves.forEach(leaf => {\n  //     // while (leaf.x < 400 && leaf.y < 400) {\n  //     debugger;\n  //     ctx4.clearRect(\n  //       leaf.x - leaf.radius,\n  //       leaf.y - leaf.radius,\n  //       2 * leaf.radius,\n  //       2 * leaf.radius\n  //     );\n  //     debugger;\n  //     leaf.x += leaf.vx;\n  //     leaf.y += leaf.vy;\n  //     leaf.draw();\n  //     // }\n  //     // leaf.translate(leaf.x, leaf.y);\n  //   });\n  // }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entry.js\n// module id = 0\n// module chunks = 0","class Draw {\n  constructor(ctx, length) {\n    this.ctx = ctx;\n    this.currentLength = length;\n    this.nextTranslate = [];\n    this.branchesDrawn = 0;\n\n    this.line([200,400],[200,250]);\n\n    this.branches(length);\n  }\n\n  line(start, end) {\n    this.ctx.beginPath();\n    start = start.map(i => i + 0.5);\n    end = end.map(i => i + 0.5);\n    if (!this.checkInclusion(this.nextTranslate, end)) {\n      this.nextTranslate.push(end)\n    }\n    this.ctx.moveTo(start[0], start[1]);\n    this.ctx.lineTo(end[0], end[1]);\n    this.ctx.stroke();\n  }\n\n  checkInclusion(given, target){\n    for (var i = 0; i < given.length; i++) {\n      let arr = given[i]\n      if (arr[0]===target[0] && arr[1]===target[1]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  drawLeftLine(startpos) {\n    let length = this.currentLength\n    let endpos = []\n    endpos[0] = startpos[0] - (length * Math.cos(Math.PI/3))\n    endpos[1] = startpos[1] - (length * Math.sin(Math.PI/3))\n    this.branchesDrawn = this.branchesDrawn + 1;\n    this.line(startpos, endpos);\n  }\n\n  drawRightLine(startpos) {\n    let length = this.currentLength\n    let endpos = []\n    endpos[0] = startpos[0] - (length * -Math.cos(Math.PI/3))\n    endpos[1] = startpos[1] - (length * Math.sin(Math.PI/3))\n    this.branchesDrawn = this.branchesDrawn + 1;\n    this.line(startpos, endpos);\n  }\n\n  branches(len) {\n    while (this.currentLength > 5) {\n      const startpos = this.nextTranslate.shift();\n      this.currentLength = this.checkLength();\n      this.drawRightLine(startpos)\n      this.drawLeftLine(startpos)\n    }\n  }\n\n  checkLength() {\n    const num = this.branchesDrawn;\n    if (Math.pow(2,2)-1 <= (num+1) && (num+1) <= Math.pow(2,3)-2) {\n      return 150 * Math.pow((2/3), 2)\n    }\n    if (Math.pow(2,3)-1 <= (num+1) && (num+1) <= Math.pow(2,4)-2) {\n      return 150 * Math.pow((2/3), 3)\n    }\n    if (Math.pow(2,4)-1 <= (num+1) && (num+1) <= Math.pow(2,5)-2) {\n      return 150 * Math.pow((2/3), 4)\n    }\n    if (Math.pow(2,5)-1 <= (num+1) && (num+1) <= Math.pow(2,6)-2) {\n      return 150 * Math.pow((2/3), 5)\n    }\n    if (Math.pow(2,6)-1 <= (num+1) && (num+1) <= Math.pow(2,7)-2) {\n      return 150 * Math.pow((2/3), 6)\n    }\n    if (Math.pow(2,7)-1 <= (num+1) && (num+1) <= Math.pow(2,8)-2) {\n      return 150 * Math.pow((2/3), 7)\n    }\n    if (Math.pow(2,8)-1 <= (num+1) && (num+1) <= Math.pow(2,9)-2) {\n      return 150 * Math.pow((2/3), 8)\n    }\n    if (Math.pow(2,9)-1 <= (num+1) && (num+1) <= Math.pow(2,10)-2) {\n      return 150 * Math.pow((2/3), 9)\n    }\n    else {\n      return 150 * Math.pow((2/3), 1)\n    }\n  }\n}\n\nexport default Draw;\n\n\n// Not a recursive function. These branches are dependent on knowing which # branch they are in order to decide the length it will grow to\n// NOT Object Oriented. also each branch does not know its starting or ending position.\n// The way it is built right now: always stores last end point into an array\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/tree.js\n// module id = 1\n// module chunks = 0","function recursive(ctx, startPosX, startPosY, length, angle) {\n  ctx.beginPath();\n  ctx.save();\n  ctx.translate(startPosX, startPosY);\n  ctx.moveTo(0, 0);\n  ctx.rotate(angle);\n  ctx.lineTo(0, -length);\n  ctx.stroke();\n\n  if (length < 10) {\n    ctx.restore();\n    return;\n  }\n\n  recursive(ctx, 0, -length, length * 0.75, Math.PI / 6);\n  recursive(ctx, 0, -length, length * 0.75, -Math.PI / 6);\n\n  ctx.restore();\n}\n\nexport default recursive;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/recursive.js\n// module id = 2\n// module chunks = 0","const rule = {\n  a: 'X',\n  b: '',\n  // b: 'F+[[X]-X]-F[-FX]+X',\n  c: 'F',\n  d: 'F+[+F-F-F]-[-F+F+F]'\n  // d: 'FF+[+F-F-F]-[-F+F+F]'\n};\n\n// const blueprint = 'X';\n\n\nclass lsystem {\n  constructor(ctx, width, height, length) {\n    this.ctx = ctx;\n    this.length = length;\n    this.blueprint = 'F';\n    // this.blueprint = 'X';\n    this.setup(width/2, height);\n  }\n\n  setup(posX, posY) {\n    this.ctx.translate(posX, posY);\n    this.ctx.moveTo(0,0);\n    console.log('DONE');\n  }\n\n  generate () {\n    let result = '';\n    for (var i = 0; i < this.blueprint.length; i++) {\n      var char = this.blueprint.charAt(i);\n\n      if (rule.a === char) {\n        result += rule.b;\n      } else if (rule.c === char) {\n        result += rule.d\n      } else {\n        result += char\n      }\n    }\n    this.blueprint = result;\n    this.length *= (2/3);\n\n    // console.log(this.blueprint, this.length);\n    this.path(this.blueprint, this.length);\n  }\n\n\n  path(blueprint, length) {\n\n    if (length > 20) {\n     for (var i = 0; i < blueprint.length; i++) {\n       let char = blueprint.charAt(i);\n\n\n       if (char === 'F') {\n         this.ctx.beginPath();\n         this.ctx.moveTo(0,0);\n         this.ctx.lineTo(0, -length);\n         this.ctx.translate(0, -length);\n         this.ctx.stroke();\n       } else if (char === '-') {\n         this.ctx.rotate(-Math.PI/9);\n       } else if (char === '+') {\n         this.ctx.rotate(Math.PI/9);\n       } else if (char === '[') {\n         this.ctx.save();\n       } else if (char === ']') {\n         this.ctx.restore();\n       }\n     }\n   }\n }\n\n}\n\nexport default lsystem;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/lsystem.js\n// module id = 3\n// module chunks = 0","class OOTree {\n  constructor(ctx, start, end, length, angle) {\n    this.ctx = ctx;\n    this.start = start;\n    this.end = end;\n    this.length = length;\n\n    this.angle = angle;\n    this.finished = false;\n  }\n\n  draw() {\n    this.ctx.beginPath();\n    this.ctx.moveTo(this.start[0], this.start[1]);\n    this.ctx.lineTo(this.end[0], this.end[1]);\n    this.ctx.stroke();\n  }\n\n  leftBranch() {\n    let newStart = [this.end[0], this.end[1]];\n    let newEnd = [];\n    var newAngle = this.angle - Math.PI / 4;\n    newEnd[0] = this.end[0] - this.length * Math.cos(newAngle);\n    newEnd[1] = this.end[1] - this.length * Math.sin(newAngle);\n\n    var leftBranch = new OOTree(\n      this.ctx,\n      newStart,\n      newEnd,\n      this.length * 0.63,\n      newAngle\n    );\n\n    return leftBranch;\n  }\n\n  rightBranch() {\n    let newStart = [this.end[0], this.end[1]];\n    let newEnd = [];\n    var newAngle = this.angle + Math.PI / 4;\n    newEnd[0] = this.end[0] + this.length * -Math.cos(newAngle);\n    newEnd[1] = this.end[1] - this.length * Math.sin(newAngle);\n\n    var rightBranch = new OOTree(\n      this.ctx,\n      newStart,\n      newEnd,\n      this.length * 0.63,\n      newAngle\n    );\n\n    return rightBranch;\n  }\n}\n\nexport default OOTree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/oo_tree.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}